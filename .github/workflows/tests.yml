#   Copyright 2019 Marc Nuri San Felix
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
name: Tests

on:
  push:
  pull_request:

env:
  SONAR_SCANNER_VERSION: 4.2.0.1873
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install
        run: npm install
      - name: Pretest
        run: npm run pretest
      - name: Test
        run: npm test
      - name: Download and install sonar-scanner
        run: |
          mkdir -p $HOME/.sonar \
          && wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip -O sonar-scanner.zip \
          && unzip sonar-scanner.zip -d $HOME/.sonar/ \
          && rm sonar-scanner.zip
      - name: SonarCloud
        run: |
          $HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux/bin/sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
          SONAR_SCANNER_OPTS: "-server"
  linux-build:
    name: Linux Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install
        run: npm install
      - name: Build
        run: |
          ./utils/prepare-electron-builder.js
          npm run build:linux
      - name: CI Artifact for AppImage
        uses: actions/upload-artifact@v3
        with:
          path: electronim-linux-x86_64.AppImage
  macos-build:
    name: macOS Build
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install
        run: npm install
      - name: Install macOS only requirement (Electron Builder) # TODO: Move to prepare-electron-builder.js script
        run: npm install dmg-license
      - name: Build
        run: |
          ./utils/prepare-electron-builder.js
          npm run build:mac
  windows-build:
    name: Windows Build
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install
        run: npm install
      - name: Build
        run: |
          node .\utils\prepare-electron-builder.js
          npm run build:win
      - name: Choco Script tests
        run: |
          powershell
          choco pack --version=$(node -p "require('./package').version") build-config/electronim.nuspec
          choco install electronim -dvy -s .
      - name: CI Artifact for exe
        uses: actions/upload-artifact@v3
        with:
          path: electronim-win-x64.zip

